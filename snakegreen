<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8">
    	<meta name="viewport" content="width=device-width, initial-scale=1.0">
    	<link rel="stylesheet" type="text/css" href="C:\Users\Usuario\Desktop\style.css">
		<title>My Second Snake</title>
		<style type="text/css">
			* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: sans-serif;
}

body {
	display: flex;
	align-items: center;
	justify-content: center;
	min-height: 100vh;
	background: #e3f2fd;
}

.wrapper {
	width: 65vmin;
	height: 70vmin;
	display: flex;
	overflow: hidden;
	flex-direction: column;
	border-radius: 5px;
	background: #0B2161;
}

.game-details {
	color: #b8c6dc;
	font-size: 1.2rem;
	font-weight: 500;
	padding: 20px 27px;
	display: flex;
	justify-content: space-between;	
}

.play-board {
	width: 100%;
	height: 100%;
	background: #0A3860;
	display: grid;
	grid-template: repeat(30, 1fr) / repeat(30, 1fr); 
}

.play-board .food {
	background: #ff003d;
	border-radius: 8px 8px 15px 15px;
}

.play-board .head {
	background: linear-gradient(#0B600A, #05B504, #288A09);
	/*background: #0B3A16;*/
	border-radius: 10px;
}

/* quiero pintar el cuerpo de distinto color a la cabeza:
.play-board .head {snakeBody[][1]} {
	background: #098B29;
}*/
		</style>
	</head>
	<body>
		<div class="wrapper">
			<div class="game-details">
				<div class="score">Score: 0</div>
				<div class="high-score">High Score: 30</div>
			</div>
			<div class="play-board"></div>
		</div>
		<script src="script.js" href="C:\Users\Usuario\Desktop\script.js">
			const playboard = document.querySelector(".play-board");
const scoreElement = document.querySelector(".score");
const highScoreElement = document.querySelector(".high-score");

let gameOver = false;
let foodX, foodY;
let snakeX = 5, snakeY = 10;
let snakeBody = [];
let velocityX = 0, velocityY = 0;
let setIntervalId;
let score = 0;

let highScore = localStorage.getItem("high-score") || 0;
highScoreElement.innerHTML = `High Score: ${highScore}`;

const changFoodPosition = () => {
	foodX = Math.floor(Math.random() * 30) + 1;
	foodY = Math.floor(Math.random() * 30) + 1;
}

const handleGameOver = () => {
	clearInterval(setIntervalId);
	alert("Game Over!");
	location.reload();
}

const changeDirection = (e) => {
	//console.log(e);
	if(e.key === "ArrowUp" && velocityY != 1) {
		velocityX = 0;
		velocityY = -1;
	} else if(e.key === "ArrowDown" && velocityY != -1) {
		velocityX = 0;
		velocityY = 1;
	} else if(e.key === "ArrowLeft" && velocityX != 1) {
		velocityX = -1;
		velocityY = 0;
	} else if(e.key === "ArrowRight" && velocityX != -1) {
		velocityX = 1;
		velocityY = 0;
	}
	initGame();
}

const initGame = () => {
	if(gameOver) return handleGameOver();
	let htmlMarkup = `<div class="food" style="grid-area: ${foodY} / ${foodX}"></div>`;

	if(snakeX === foodX && snakeY === foodY) {
		changFoodPosition();
		snakeBody.push([foodX, foodY]);
		score++;

		highScore = score >= highScore ? score : highScore;
		localStorage.setItem("high-score", highScore);
		scoreElement.innerHTML = `Score: ${score}`;
		
		highScoreElement.innerHTML = `High Score: ${highScore}`;
	}

	for(let i = snakeBody.length - 1; i > 0; i--) {
		snakeBody[i] = snakeBody[i - 1];
	}

	snakeBody[0] = [snakeX, snakeY];

	snakeX += velocityX;
	snakeY += velocityY; // y = 10 - 1 = 9

	if(snakeX <= 0 || snakeX > 30 || snakeY <= 0 || snakeY > 30) {
		gameOver = true;
		//console.log("Game Over!");
	}

	for(let i = 0; i < snakeBody.length; i++) {
		htmlMarkup += `<div class="head" style="grid-area: ${snakeBody[i][1]} / ${snakeBody[i][0]}"></div>`;
		if(i !== 0 && snakeBody[0][1] === snakeBody[i][1] && snakeBody[0][0] === snakeBody[i][0]) {
			gameOver = true;
		}
	}
	playboard.innerHTML = htmlMarkup;
}

changFoodPosition();
initGame();
setIntervalId = setInterval(initGame, 150);
document.addEventListener("keydown", changeDirection);
		</script>
	</body>
</html>
